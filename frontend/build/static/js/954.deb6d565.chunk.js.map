{"version":3,"file":"static/js/954.deb6d565.chunk.js","mappings":"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","sources":["components/Warehouses/WarehouseManagement.js"],"sourcesContent":["// Enhanced Warehouse Management Component - إدارة المخازن المحسنة المطورة\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from '../../localization/translations.js';\nimport axios from 'axios';\n\nconst WarehouseManagement = ({ user, language, isRTL }) => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [warehouses, setWarehouses] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [availableManagers, setAvailableManagers] = useState([]);\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [warehouseStats, setWarehouseStats] = useState({});\n  const [movements, setMovements] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showAddWarehouseModal, setShowAddWarehouseModal] = useState(false);\n  const [showEditWarehouseModal, setShowEditWarehouseModal] = useState(false);\n  const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n  \n  const { t } = useTranslation(language);\n  const API = (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001') + '/api';\n\n  // Egyptian regions configuration\n  const egyptianRegions = [\n    { id: 'cairo_greater', name: 'القاهرة الكبرى', cities: ['القاهرة', 'الجيزة', 'القليوبية'] },\n    { id: 'alexandria', name: 'الإسكندرية', cities: ['الإسكندرية', 'البحيرة', 'مطروح'] },\n    { id: 'delta', name: 'الدلتا', cities: ['الدقهلية', 'الشرقية', 'كفر الشيخ', 'الغربية'] },\n    { id: 'canal', name: 'قناة السويس', cities: ['الإسماعيلية', 'بورسعيد', 'السويس'] },\n    { id: 'upper_egypt', name: 'صعيد مصر', cities: ['أسيوط', 'سوهاج', 'قنا', 'الأقصر', 'أسوان'] },\n    { id: 'sinai', name: 'سيناء', cities: ['شمال سيناء', 'جنوب سيناء'] }\n  ];\n\n  // Sample products for warehouse inventory\n  const availableProducts = [\n    { id: 'prod-001', name: 'أموكسيسيلين 500mg', unit: 'ڤايل', category: 'مضادات حيوية' },\n    { id: 'prod-002', name: 'فيتامين د3', unit: 'علبة', category: 'فيتامينات' },\n    { id: 'prod-003', name: 'أنسولين طويل المفعول', unit: 'قلم', category: 'هرمونات' },\n    { id: 'prod-004', name: 'مسكن للألم', unit: 'شريط', category: 'مسكنات' },\n    { id: 'prod-005', name: 'مضاد التهاب', unit: 'علبة', category: 'مضادات التهاب' },\n    { id: 'prod-006', name: 'شراب السعال', unit: 'زجاجة', category: 'أدوية الجهاز التنفسي' },\n    { id: 'prod-007', name: 'كريم موضعي', unit: 'أنبوبة', category: 'أدوية موضعية' },\n    { id: 'prod-008', name: 'قطرة للعين', unit: 'عبوة', category: 'أدوية العيون' }\n  ];\n\n  useEffect(() => {\n    fetchWarehouseData();\n    fetchRegions();\n    fetchAvailableManagers();\n  }, []);\n\n  const fetchRegions = () => {\n    setRegions(egyptianRegions);\n  };\n\n  const fetchAvailableManagers = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      // In real implementation, this would fetch users with accounting or warehouse_manager roles\n      const response = await axios.get(`${API}/users?role=accounting,warehouse_manager`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      setAvailableManagers(response.data || []);\n    } catch (error) {\n      console.error('Error fetching managers:', error);\n      // Mock data for development\n      setAvailableManagers([\n        { id: 'user-001', full_name: 'أحمد محمد الحسابات', role: 'accounting', department: 'المحاسبة' },\n        { id: 'user-002', full_name: 'سارة أحمد أمينة المخزن', role: 'warehouse_manager', department: 'المخازن' },\n        { id: 'user-003', full_name: 'محمد علي المسؤول المالي', role: 'accounting', department: 'المحاسبة' },\n        { id: 'user-004', full_name: 'فاطمة سعد مديرة المخزن', role: 'warehouse_manager', department: 'المخازن' }\n      ]);\n    }\n  };\n\n  const fetchWarehouseData = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('access_token');\n      \n      // Enhanced mock data for development\n      setWarehouses([\n        { \n          id: 'WH_CAIRO', \n          name: 'مخزن القاهرة الرئيسي', \n          city: 'القاهرة', \n          regions: ['cairo_greater', 'delta'], // Multiple regions\n          region_names: ['القاهرة الكبرى', 'الدلتا'],\n          managers: ['user-001', 'user-002'], // Multiple managers\n          manager_names: ['أحمد محمد الحسابات', 'سارة أحمد أمينة المخزن'],\n          status: 'active',\n          products_inventory: {\n            'prod-001': { quantity: 150, min_quantity: 20, max_quantity: 300 },\n            'prod-002': { quantity: 80, min_quantity: 15, max_quantity: 200 },\n            'prod-003': { quantity: 45, min_quantity: 10, max_quantity: 100 },\n            'prod-004': { quantity: 200, min_quantity: 50, max_quantity: 500 }\n          },\n          created_at: '2024-01-01T00:00:00Z'\n        },\n        { \n          id: 'WH_ALEX', \n          name: 'مخزن الإسكندرية', \n          city: 'الإسكندرية', \n          regions: ['alexandria'], \n          region_names: ['الإسكندرية'],\n          managers: ['user-003'],\n          manager_names: ['محمد علي المسؤول المالي'],\n          status: 'active',\n          products_inventory: {\n            'prod-001': { quantity: 90, min_quantity: 20, max_quantity: 200 },\n            'prod-002': { quantity: 120, min_quantity: 25, max_quantity: 250 },\n            'prod-005': { quantity: 65, min_quantity: 15, max_quantity: 150 }\n          },\n          created_at: '2024-01-05T00:00:00Z'\n        },\n        { \n          id: 'WH_GIZA', \n          name: 'مخزن الجيزة', \n          city: 'الجيزة', \n          regions: ['cairo_greater'], \n          region_names: ['القاهرة الكبرى'],\n          managers: ['user-002', 'user-004'],\n          manager_names: ['سارة أحمد أمينة المخزن', 'فاطمة سعد مديرة المخزن'],\n          status: 'maintenance',\n          products_inventory: {\n            'prod-003': { quantity: 25, min_quantity: 10, max_quantity: 80 },\n            'prod-004': { quantity: 180, min_quantity: 50, max_quantity: 400 },\n            'prod-006': { quantity: 95, min_quantity: 20, max_quantity: 200 }\n          },\n          created_at: '2024-01-10T00:00:00Z'\n        }\n      ]);\n\n      setProducts(availableProducts);\n\n      // Calculate enhanced stats\n      const totalWarehouses = 3;\n      const totalProducts = availableProducts.length;\n      const activeWarehouses = 2;\n      \n      setWarehouseStats({\n        totalWarehouses,\n        totalProducts,\n        activeWarehouses,\n        totalManagers: 4,\n        totalRegionsCovered: 3\n      });\n\n      setPendingOrders([\n        { id: 'ORD-001', clinic: 'عيادة د.أحمد', warehouse: 'مخزن القاهرة', status: 'pending_warehouse', items: 5, total: 1500 },\n        { id: 'ORD-002', clinic: 'عيادة د.فاطمة', warehouse: 'مخزن الإسكندرية', status: 'pending_warehouse', items: 3, total: 890 }\n      ]);\n\n      setMovements([\n        { id: 1, type: 'inbound', product: 'أموكسيسيلين', quantity: 100, warehouse: 'مخزن القاهرة', date: '2024-01-15', status: 'completed' },\n        { id: 2, type: 'outbound', product: 'فيتامين د3', quantity: 50, warehouse: 'مخزن الإسكندرية', date: '2024-01-14', status: 'pending' }\n      ]);\n\n    } catch (error) {\n      console.error('Error fetching warehouse data:', error);\n      setError('خطأ في تحميل بيانات المخازن');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getWarehouseStatusColor = (status) => {\n    switch (status) {\n      case 'active': return 'bg-green-500/20 text-green-300 border-green-500/30';\n      case 'maintenance': return 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30';\n      case 'inactive': return 'bg-red-500/20 text-red-300 border-red-500/30';\n      default: return 'bg-gray-500/20 text-gray-300 border-gray-500/30';\n    }\n  };\n\n  const getStockStatusColor = (status) => {\n    switch (status) {\n      case 'good': return 'bg-green-500/20 text-green-300';\n      case 'low': return 'bg-yellow-500/20 text-yellow-300';\n      case 'critical': return 'bg-red-500/20 text-red-300';\n      default: return 'bg-gray-500/20 text-gray-300';\n    }\n  };\n\n  const calculateOccupancyRate = (current, capacity) => {\n    return ((current / capacity) * 100).toFixed(1);\n  };\n\n  return (\n    <div className=\"warehouse-management-container\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center gap-3 mb-4\">\n          <div className=\"w-12 h-12 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-lg flex items-center justify-center\">\n            <span className=\"text-2xl text-white\">🏭</span>\n          </div>\n          <div>\n            <h1 className=\"text-3xl font-bold\">{t('warehouse', 'title')}</h1>\n            <p className=\"text-lg opacity-75\">إدارة شاملة للمخازن والمخزون والطلبات</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Status Messages */}\n      {success && (\n        <div className=\"mb-6 p-4 bg-green-500/20 border border-green-500/30 rounded-lg text-green-200\">\n          ✅ {success}\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-500/20 border border-red-500/30 rounded-lg text-red-200\">\n          ❌ {error}\n        </div>\n      )}\n\n      {/* Navigation Tabs */}\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20 mb-6\">\n        <div className=\"flex flex-wrap gap-2\">\n          {[\n            { id: 'dashboard', label: 'لوحة التحكم', icon: '📊' },\n            { id: 'inventory', label: 'إدارة المخزون', icon: '📦' },\n            { id: 'orders', label: 'الطلبات', icon: '🛒' },\n            { id: 'movements', label: 'سجل الحركات', icon: '📋' }\n          ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`px-4 py-2 rounded-lg font-medium transition-all flex items-center gap-2 ${\n                activeTab === tab.id\n                  ? 'bg-indigo-600 text-white'\n                  : 'bg-white/10 hover:bg-white/20'\n              }`}\n            >\n              <span>{tab.icon}</span>\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'dashboard' && (\n        <EnhancedWarehouseDashboard \n          stats={warehouseStats}\n          warehouses={warehouses}\n          products={products}\n          loading={loading}\n          language={language}\n          onAddWarehouse={() => setShowAddWarehouseModal(true)}\n          onEditWarehouse={(warehouse) => {\n            setSelectedWarehouse(warehouse);\n            setShowEditWarehouseModal(true);\n          }}\n          onViewDetails={(warehouse) => {\n            setSelectedWarehouse(warehouse);\n            // Add view details logic\n          }}\n          getWarehouseStatusColor={getWarehouseStatusColor}\n        />\n      )}\n\n      {activeTab === 'inventory' && (\n        <EnhancedInventoryManagement \n          warehouses={warehouses}\n          products={products}\n          onRefresh={fetchWarehouseData}\n          language={language}\n          user={user}\n        />\n      )}\n\n      {activeTab === 'orders' && (\n        <WarehouseOrdersManagement \n          orders={pendingOrders}\n          onRefresh={fetchWarehouseData}\n          language={language}\n        />\n      )}\n\n      {activeTab === 'movements' && (\n        <MovementsLog \n          movements={movements}\n          language={language}\n        />\n      )}\n\n      {/* Enhanced Modals */}\n      {showAddWarehouseModal && (\n        <EnhancedAddWarehouseModal\n          onClose={() => setShowAddWarehouseModal(false)}\n          onSave={(data) => {\n            console.log('Adding enhanced warehouse:', data);\n            setSuccess('تم إضافة المخزن بنجاح مع جميع التفاصيل');\n            setShowAddWarehouseModal(false);\n            fetchWarehouseData();\n          }}\n          regions={regions}\n          availableManagers={availableManagers}\n          products={products}\n          language={language}\n        />\n      )}\n\n      {showEditWarehouseModal && selectedWarehouse && (\n        <EnhancedEditWarehouseModal\n          warehouse={selectedWarehouse}\n          onClose={() => setShowEditWarehouseModal(false)}\n          onSave={(data) => {\n            console.log('Editing enhanced warehouse:', data);\n            setSuccess('تم تحديث المخزن بنجاح');\n            setShowEditWarehouseModal(false);\n            fetchWarehouseData();\n          }}\n          regions={regions}\n          availableManagers={availableManagers}\n          products={products}\n          language={language}\n        />\n      )}\n    </div>\n  );\n};\n\n// Enhanced Warehouse Dashboard Component\nconst EnhancedWarehouseDashboard = ({ \n  stats, \n  warehouses, \n  products,\n  loading, \n  language,\n  onAddWarehouse,\n  onEditWarehouse, \n  onViewDetails,\n  getWarehouseStatusColor\n}) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\n          <p>جاري تحميل بيانات المخازن...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getProductStockStatus = (warehouse, productId) => {\n    const inventory = warehouse.products_inventory[productId];\n    if (!inventory) return 'none';\n    if (inventory.quantity <= inventory.min_quantity) return 'critical';\n    if (inventory.quantity <= inventory.min_quantity * 1.5) return 'low';\n    return 'good';\n  };\n\n  const getStockStatusColor = (status) => {\n    switch (status) {\n      case 'good': return 'bg-green-500/20 text-green-300';\n      case 'low': return 'bg-yellow-500/20 text-yellow-300';\n      case 'critical': return 'bg-red-500/20 text-red-300';\n      case 'none': return 'bg-gray-500/20 text-gray-300';\n      default: return 'bg-gray-500/20 text-gray-300';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Enhanced Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">إجمالي المخازن</p>\n              <p className=\"text-3xl font-bold\">{stats.totalWarehouses || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-blue-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">🏭</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">إجمالي المنتجات</p>\n              <p className=\"text-3xl font-bold\">{stats.totalProducts || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-green-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">📦</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">المخازن النشطة</p>\n              <p className=\"text-3xl font-bold\">{stats.activeWarehouses || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-purple-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">✅</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">إجمالي المسؤولين</p>\n              <p className=\"text-3xl font-bold\">{stats.totalManagers || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-orange-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">👥</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">المناطق المغطاة</p>\n              <p className=\"text-3xl font-bold\">{stats.totalRegionsCovered || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-pink-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">🗺️</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-4\">\n        <button\n          onClick={onAddWarehouse}\n          className=\"bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 font-medium\"\n        >\n          <span>➕</span>\n          إضافة مخزن جديد\n        </button>\n      </div>\n\n      {/* Enhanced Warehouses List with Product Inventory Tables */}\n      <div className=\"grid grid-cols-1 gap-8\">\n        {warehouses.map((warehouse) => (\n          <div key={warehouse.id} className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n            {/* Warehouse Header */}\n            <div className=\"flex items-start justify-between mb-6\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-3 mb-2\">\n                  <h3 className=\"text-2xl font-bold\">{warehouse.name}</h3>\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${getWarehouseStatusColor(warehouse.status)}`}>\n                    {warehouse.status === 'active' ? '✅ نشط' : warehouse.status === 'maintenance' ? '🔧 صيانة' : '❌ غير نشط'}\n                  </span>\n                </div>\n                <p className=\"text-lg opacity-75 mb-1\">{warehouse.city}</p>\n                \n                {/* Regions */}\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <span className=\"text-sm opacity-60\">المناطق:</span>\n                  <div className=\"flex gap-1 flex-wrap\">\n                    {warehouse.region_names?.map((region, index) => (\n                      <span key={index} className=\"bg-blue-500/20 text-blue-300 px-2 py-1 rounded text-xs\">\n                        {region}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Managers */}\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm opacity-60\">المسؤولين:</span>\n                  <div className=\"flex gap-1 flex-wrap\">\n                    {warehouse.manager_names?.map((manager, index) => (\n                      <span key={index} className=\"bg-purple-500/20 text-purple-300 px-2 py-1 rounded text-xs\">\n                        {manager}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={() => onViewDetails(warehouse)}\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n                >\n                  📊 التفاصيل\n                </button>\n                <button\n                  onClick={() => onEditWarehouse(warehouse)}\n                  className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors text-sm\"\n                >\n                  ✏️ تعديل\n                </button>\n              </div>\n            </div>\n\n            {/* Products Inventory Table */}\n            <div className=\"bg-white/5 rounded-lg p-4 border border-white/10\">\n              <h4 className=\"text-lg font-bold text-white mb-4 flex items-center gap-2\">\n                <span>📦</span>\n                جدول المنتجات والكميات المتاحة\n              </h4>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"border-b border-white/10\">\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">المنتج</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الفئة</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الوحدة</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الكمية المتاحة</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الحد الأدنى</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الحالة</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {products.map((product) => {\n                      const inventory = warehouse.products_inventory[product.id];\n                      const status = getProductStockStatus(warehouse, product.id);\n                      \n                      return (\n                        <tr key={product.id} className=\"border-b border-white/5 hover:bg-white/5 transition-colors\">\n                          <td className=\"py-3 px-4 font-medium text-white\">{product.name}</td>\n                          <td className=\"py-3 px-4 text-white/70\">{product.category}</td>\n                          <td className=\"py-3 px-4 text-white/70\">{product.unit}</td>\n                          <td className=\"py-3 px-4\">\n                            {inventory ? (\n                              <span className=\"text-white font-medium\">{inventory.quantity}</span>\n                            ) : (\n                              <span className=\"text-gray-400\">0</span>\n                            )}\n                          </td>\n                          <td className=\"py-3 px-4 text-white/70\">\n                            {inventory ? inventory.min_quantity : '-'}\n                          </td>\n                          <td className=\"py-3 px-4\">\n                            <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStockStatusColor(status)}`}>\n                              {status === 'good' ? '✅ جيد' : \n                               status === 'low' ? '⚠️ منخفض' : \n                               status === 'critical' ? '🚨 حرج' : '❌ غير متوفر'}\n                            </span>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nconst WarehouseDashboard = ({ \n  stats, \n  warehouses, \n  inventory, \n  loading, \n  language,\n  onAddWarehouse,\n  onEditWarehouse, \n  onViewDetails,\n  getWarehouseStatusColor,\n  calculateOccupancyRate \n}) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\n          <p>جاري تحميل بيانات المخازن...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">إجمالي المخازن</p>\n              <p className=\"text-3xl font-bold\">{stats.totalWarehouses || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-blue-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">🏭</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">السعة الإجمالية</p>\n              <p className=\"text-3xl font-bold\">{stats.totalCapacity?.toLocaleString() || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-green-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">📦</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">المخزون الحالي</p>\n              <p className=\"text-3xl font-bold\">{stats.totalCurrentStock?.toLocaleString() || 0}</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-purple-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">📊</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm opacity-75 mb-1\">معدل الإشغال</p>\n              <p className=\"text-3xl font-bold\">{stats.occupancyRate || 0}%</p>\n            </div>\n            <div className=\"w-12 h-12 rounded-lg bg-orange-500/20 flex items-center justify-center\">\n              <span className=\"text-2xl\">📈</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-4\">\n        <button\n          onClick={onAddWarehouse}\n          className=\"bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n        >\n          <span>➕</span>\n          إضافة مخزن\n        </button>\n      </div>\n\n      {/* Warehouses List */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {warehouses.map((warehouse) => (\n          <div key={warehouse.id} className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div>\n                <h3 className=\"text-xl font-bold mb-1\">{warehouse.name}</h3>\n                <p className=\"text-sm opacity-75\">{warehouse.city} - {warehouse.region}</p>\n                <p className=\"text-sm opacity-60\">المدير: {warehouse.manager}</p>\n              </div>\n              <span className={`px-3 py-1 rounded-full text-xs ${getWarehouseStatusColor(warehouse.status)}`}>\n                {warehouse.status === 'active' ? 'نشط' : warehouse.status === 'maintenance' ? 'صيانة' : 'غير نشط'}\n              </span>\n            </div>\n\n            <div className=\"space-y-3 mb-4\">\n              <div className=\"flex justify-between text-sm\">\n                <span>السعة:</span>\n                <span>{warehouse.capacity?.toLocaleString()}</span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span>المخزون الحالي:</span>\n                <span>{warehouse.current_stock?.toLocaleString()}</span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span>معدل الإشغال:</span>\n                <span>{calculateOccupancyRate(warehouse.current_stock, warehouse.capacity)}%</span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span>عدد المنتجات:</span>\n                <span>{warehouse.products_count}</span>\n              </div>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => onViewDetails(warehouse)}\n                className=\"flex-1 bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n              >\n                عرض التفاصيل\n              </button>\n              <button\n                onClick={() => onEditWarehouse(warehouse)}\n                className=\"flex-1 bg-gray-600 text-white py-2 rounded-lg hover:bg-gray-700 transition-colors text-sm\"\n              >\n                تعديل\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Low Stock Alerts */}\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n        <h3 className=\"text-xl font-bold mb-4 flex items-center gap-2\">\n          <span>⚠️</span>\n          تنبيهات نقص المخزون\n        </h3>\n        <div className=\"space-y-3\">\n          {inventory.filter(item => item.status === 'critical' || item.status === 'low').map((item) => (\n            <div key={item.id} className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\">\n              <div>\n                <div className=\"font-medium\">{item.name}</div>\n                <div className=\"text-sm opacity-75\">{item.warehouse}</div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"text-right\">\n                  <div className=\"text-sm\">المخزون: {item.stock}</div>\n                  <div className=\"text-xs opacity-60\">الحد الأدنى: {item.min_stock}</div>\n                </div>\n                <span className={`px-2 py-1 rounded text-xs ${\n                  item.status === 'critical' ? 'bg-red-500/20 text-red-300' : 'bg-yellow-500/20 text-yellow-300'\n                }`}>\n                  {item.status === 'critical' ? 'حرج' : 'منخفض'}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Inventory Management Component\nconst EnhancedInventoryManagement = ({ warehouses, products, onRefresh, language, user }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20\">\n        <h3 className=\"text-2xl font-bold text-white mb-6 flex items-center gap-2\">\n          <span>📦</span>\n          إدارة المخزون المتقدمة\n        </h3>\n        \n        <p className=\"text-white/70 mb-6\">\n          عرض شامل لجميع المنتجات في كل مخزن مع إمكانية تحديث الكميات\n        </p>\n\n        <div className=\"space-y-8\">\n          {warehouses.map((warehouse) => (\n            <div key={warehouse.id} className=\"bg-white/5 rounded-lg p-6 border border-white/10\">\n              <h4 className=\"text-xl font-bold text-white mb-4 flex items-center gap-2\">\n                <span>🏭</span>\n                {warehouse.name}\n              </h4>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"border-b border-white/10\">\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">المنتج</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الفئة</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الكمية الحالية</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الحد الأدنى</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الحالة</th>\n                      <th className=\"text-right py-3 px-4 text-white/80 font-medium\">الإجراءات</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {products.map((product) => {\n                      const inventory = warehouse.products_inventory[product.id];\n                      const status = inventory ? \n                        (inventory.quantity <= inventory.min_quantity ? 'critical' : \n                         inventory.quantity <= inventory.min_quantity * 1.5 ? 'low' : 'good') : 'none';\n                      \n                      return (\n                        <tr key={product.id} className=\"border-b border-white/5 hover:bg-white/5 transition-colors\">\n                          <td className=\"py-3 px-4 font-medium text-white\">{product.name}</td>\n                          <td className=\"py-3 px-4 text-white/70\">{product.category}</td>\n                          <td className=\"py-3 px-4\">\n                            <span className=\"text-white font-medium\">\n                              {inventory ? inventory.quantity : 0}\n                            </span>\n                          </td>\n                          <td className=\"py-3 px-4 text-white/70\">\n                            {inventory ? inventory.min_quantity : '-'}\n                          </td>\n                          <td className=\"py-3 px-4\">\n                            <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                              status === 'good' ? 'bg-green-500/20 text-green-300' :\n                              status === 'low' ? 'bg-yellow-500/20 text-yellow-300' :\n                              status === 'critical' ? 'bg-red-500/20 text-red-300' :\n                              'bg-gray-500/20 text-gray-300'\n                            }`}>\n                              {status === 'good' ? '✅ جيد' : \n                               status === 'low' ? '⚠️ منخفض' : \n                               status === 'critical' ? '🚨 حرج' : '❌ غير متوفر'}\n                            </span>\n                          </td>\n                          <td className=\"py-3 px-4\">\n                            <button\n                              onClick={() => {\n                                // Handle inventory update\n                                console.log(`Update inventory for ${product.name} in ${warehouse.name}`);\n                              }}\n                              className=\"bg-blue-600 text-white px-3 py-1 rounded text-xs hover:bg-blue-700 transition-colors\"\n                            >\n                              تحديث\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Edit Warehouse Modal\nconst EnhancedEditWarehouseModal = ({ warehouse, onClose, onSave, regions, availableManagers, products, language }) => {\n  const [formData, setFormData] = useState({\n    name: warehouse.name || '',\n    city: warehouse.city || '',\n    selectedRegions: warehouse.regions || [],\n    selectedManagers: warehouse.managers || [],\n    productsInventory: warehouse.products_inventory || {}\n  });\n\n  const handleRegionToggle = (regionId) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedRegions: prev.selectedRegions.includes(regionId)\n        ? prev.selectedRegions.filter(id => id !== regionId)\n        : [...prev.selectedRegions, regionId]\n    }));\n  };\n\n  const handleManagerToggle = (managerId) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedManagers: prev.selectedManagers.includes(managerId)\n        ? prev.selectedManagers.filter(id => id !== managerId)\n        : [...prev.selectedManagers, managerId]\n    }));\n  };\n\n  const updateProductInventory = (productId, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      productsInventory: {\n        ...prev.productsInventory,\n        [productId]: {\n          ...prev.productsInventory[productId],\n          [field]: parseInt(value) || 0\n        }\n      }\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave({ ...warehouse, ...formData });\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto border border-white/20\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-2xl text-white\">✏️</span>\n              </div>\n              <div>\n                <h3 className=\"text-2xl font-bold text-white\">تعديل المخزن</h3>\n                <p className=\"text-white/70\">{warehouse.name}</p>\n              </div>\n            </div>\n            <button onClick={onClose} className=\"text-white/70 hover:text-white text-2xl\">✕</button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Basic Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">اسم المخزن *</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                  className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white\"\n                  required\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">المدينة *</label>\n                <input\n                  type=\"text\"\n                  value={formData.city}\n                  onChange={(e) => setFormData(prev => ({ ...prev, city: e.target.value }))}\n                  className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Multiple Regions Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-3\">\n                المناطق المخدومة * \n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {regions.map((region) => (\n                  <label key={region.id} className=\"flex items-center gap-3 p-4 bg-white/5 rounded-lg border border-white/10 cursor-pointer hover:bg-white/10 transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.selectedRegions.includes(region.id)}\n                      onChange={() => handleRegionToggle(region.id)}\n                      className=\"w-5 h-5 text-blue-600 rounded border-2 border-white/30\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"text-white font-medium\">{region.name}</div>\n                      <div className=\"text-white/60 text-xs\">\n                        {region.cities.join('، ')}\n                      </div>\n                    </div>\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            {/* Multiple Managers Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-3\">\n                المسؤولين عن المخزن *\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {availableManagers.map((manager) => (\n                  <label key={manager.id} className=\"flex items-center gap-3 p-4 bg-white/5 rounded-lg border border-white/10 cursor-pointer hover:bg-white/10 transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.selectedManagers.includes(manager.id)}\n                      onChange={() => handleManagerToggle(manager.id)}\n                      className=\"w-5 h-5 text-blue-600 rounded border-2 border-white/30\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"text-white font-medium\">{manager.full_name}</div>\n                      <div className=\"text-white/60 text-xs flex items-center gap-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          manager.role === 'accounting' ? 'bg-blue-500/20 text-blue-300' : 'bg-purple-500/20 text-purple-300'\n                        }`}>\n                          {manager.role === 'accounting' ? '💰 محاسبة' : '📦 أمين مخزن'}\n                        </span>\n                      </div>\n                    </div>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"flex gap-3 pt-6 border-t border-white/10\">\n              <button\n                type=\"submit\"\n                className=\"flex-1 bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n              >\n                حفظ التغييرات\n              </button>\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"flex-1 bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors font-medium\"\n              >\n                إلغاء\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst InventoryManagement = ({ inventory, warehouses, onRefresh, language, getStockStatusColor }) => (\n  <div className=\"text-center py-12\">\n    <div className=\"text-6xl mb-4\">📦</div>\n    <h3 className=\"text-xl font-bold mb-2\">إدارة المخزون متقدمة</h3>\n    <p className=\"text-gray-600 mb-6\">نظام شامل لإدارة المخزون مع تتبع المنتجات</p>\n    <div className=\"space-y-4\">\n      {inventory.map((item) => (\n        <div key={item.id} className=\"bg-white/10 p-4 rounded-lg flex justify-between items-center\">\n          <div>\n            <div className=\"font-medium\">{item.name}</div>\n            <div className=\"text-sm opacity-75\">{item.warehouse}</div>\n          </div>\n          <span className={`px-3 py-1 rounded ${getStockStatusColor(item.status)}`}>\n            {item.stock} / {item.min_stock}\n          </span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst WarehouseOrdersManagement = ({ orders, onRefresh, language }) => (\n  <div className=\"text-center py-12\">\n    <div className=\"text-6xl mb-4\">🛒</div>\n    <h3 className=\"text-xl font-bold mb-2\">إدارة طلبات المخزن</h3>\n    <p className=\"text-gray-600 mb-6\">معالجة الطلبات المعلقة في المخازن</p>\n    <div className=\"space-y-4\">\n      {orders.map((order) => (\n        <div key={order.id} className=\"bg-white/10 p-4 rounded-lg flex justify-between items-center\">\n          <div>\n            <div className=\"font-medium\">{order.id}</div>\n            <div className=\"text-sm opacity-75\">{order.clinic}</div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"font-medium\">{order.total} ج.م</div>\n            <div className=\"text-sm opacity-75\">{order.items} عناصر</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nconst MovementsLog = ({ movements, language }) => (\n  <div className=\"text-center py-12\">\n    <div className=\"text-6xl mb-4\">📋</div>\n    <h3 className=\"text-xl font-bold mb-2\">سجل حركات المخزن</h3>\n    <p className=\"text-gray-600 mb-6\">تتبع جميع حركات الدخول والخروج</p>\n    <div className=\"space-y-4\">\n      {movements.map((movement) => (\n        <div key={movement.id} className=\"bg-white/10 p-4 rounded-lg flex justify-between items-center\">\n          <div>\n            <div className=\"font-medium\">{movement.product}</div>\n            <div className=\"text-sm opacity-75\">{movement.warehouse}</div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"font-medium\">{movement.type === 'inbound' ? '⬇️' : '⬆️'} {movement.quantity}</div>\n            <div className=\"text-sm opacity-75\">{movement.date}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\n// Enhanced Add Warehouse Modal with Multiple Regions and Managers\nconst EnhancedAddWarehouseModal = ({ onClose, onSave, regions, availableManagers, products, language }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    city: '',\n    selectedRegions: [],\n    selectedManagers: [],\n    productsInventory: {}\n  });\n\n  // Initialize products inventory with default values\n  useEffect(() => {\n    const initialInventory = {};\n    products.forEach(product => {\n      initialInventory[product.id] = {\n        quantity: 0,\n        min_quantity: 10,\n        max_quantity: 500\n      };\n    });\n    setFormData(prev => ({ ...prev, productsInventory: initialInventory }));\n  }, [products]);\n\n  const handleRegionToggle = (regionId) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedRegions: prev.selectedRegions.includes(regionId)\n        ? prev.selectedRegions.filter(id => id !== regionId)\n        : [...prev.selectedRegions, regionId]\n    }));\n  };\n\n  const handleManagerToggle = (managerId) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedManagers: prev.selectedManagers.includes(managerId)\n        ? prev.selectedManagers.filter(id => id !== managerId)\n        : [...prev.selectedManagers, managerId]\n    }));\n  };\n\n  const updateProductInventory = (productId, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      productsInventory: {\n        ...prev.productsInventory,\n        [productId]: {\n          ...prev.productsInventory[productId],\n          [field]: parseInt(value) || 0\n        }\n      }\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto border border-white/20\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-2xl text-white\">🏭</span>\n              </div>\n              <div>\n                <h3 className=\"text-2xl font-bold text-white\">إضافة مخزن جديد</h3>\n                <p className=\"text-white/70\">إنشاء مخزن جديد مع تحديد المناطق والمسؤولين</p>\n              </div>\n            </div>\n            <button onClick={onClose} className=\"text-white/70 hover:text-white text-2xl\">✕</button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Basic Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">اسم المخزن *</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                  className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-white\"\n                  placeholder=\"مثال: مخزن القاهرة الجديد\"\n                  required\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">المدينة *</label>\n                <input\n                  type=\"text\"\n                  value={formData.city}\n                  onChange={(e) => setFormData(prev => ({ ...prev, city: e.target.value }))}\n                  className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 text-white\"\n                  placeholder=\"مثال: القاهرة\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Multiple Regions Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-3\">\n                المناطق المخدومة * (يمكن اختيار أكثر من منطقة)\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {regions.map((region) => (\n                  <label key={region.id} className=\"flex items-center gap-3 p-4 bg-white/5 rounded-lg border border-white/10 cursor-pointer hover:bg-white/10 transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.selectedRegions.includes(region.id)}\n                      onChange={() => handleRegionToggle(region.id)}\n                      className=\"w-5 h-5 text-green-600 rounded border-2 border-white/30\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"text-white font-medium\">{region.name}</div>\n                      <div className=\"text-white/60 text-xs\">\n                        {region.cities.join('، ')}\n                      </div>\n                    </div>\n                  </label>\n                ))}\n              </div>\n              {formData.selectedRegions.length === 0 && (\n                <p className=\"text-orange-300 text-xs mt-2\">يرجى اختيار منطقة واحدة على الأقل</p>\n              )}\n            </div>\n\n            {/* Multiple Managers Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-3\">\n                المسؤولين عن المخزن * (الحسابات وأمناء المخازن فقط)\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {availableManagers.map((manager) => (\n                  <label key={manager.id} className=\"flex items-center gap-3 p-4 bg-white/5 rounded-lg border border-white/10 cursor-pointer hover:bg-white/10 transition-colors\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.selectedManagers.includes(manager.id)}\n                      onChange={() => handleManagerToggle(manager.id)}\n                      className=\"w-5 h-5 text-green-600 rounded border-2 border-white/30\"\n                    />\n                    <div className=\"flex-1\">\n                      <div className=\"text-white font-medium\">{manager.full_name}</div>\n                      <div className=\"text-white/60 text-xs flex items-center gap-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          manager.role === 'accounting' ? 'bg-blue-500/20 text-blue-300' : 'bg-purple-500/20 text-purple-300'\n                        }`}>\n                          {manager.role === 'accounting' ? '💰 محاسبة' : '📦 أمين مخزن'}\n                        </span>\n                        <span>{manager.department}</span>\n                      </div>\n                    </div>\n                  </label>\n                ))}\n              </div>\n              {formData.selectedManagers.length === 0 && (\n                <p className=\"text-orange-300 text-xs mt-2\">يرجى اختيار مسؤول واحد على الأقل</p>\n              )}\n            </div>\n\n            {/* Products Inventory Table */}\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-3\">\n                جدول المنتجات مع الكميات الأولية\n              </label>\n              <div className=\"bg-white/5 rounded-lg p-4 border border-white/10 max-h-80 overflow-y-auto\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-sm\">\n                    <thead>\n                      <tr className=\"border-b border-white/10\">\n                        <th className=\"text-right py-2 px-3 text-white/80\">المنتج</th>\n                        <th className=\"text-right py-2 px-3 text-white/80\">الفئة</th>\n                        <th className=\"text-right py-2 px-3 text-white/80\">الوحدة</th>\n                        <th className=\"text-right py-2 px-3 text-white/80\">الكمية الأولية</th>\n                        <th className=\"text-right py-2 px-3 text-white/80\">الحد الأدنى</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {products.map((product) => (\n                        <tr key={product.id} className=\"border-b border-white/5\">\n                          <td className=\"py-2 px-3 font-medium text-white\">{product.name}</td>\n                          <td className=\"py-2 px-3 text-white/70\">{product.category}</td>\n                          <td className=\"py-2 px-3 text-white/70\">{product.unit}</td>\n                          <td className=\"py-2 px-3\">\n                            <input\n                              type=\"number\"\n                              min=\"0\"\n                              value={formData.productsInventory[product.id]?.quantity || 0}\n                              onChange={(e) => updateProductInventory(product.id, 'quantity', e.target.value)}\n                              className=\"w-20 px-2 py-1 bg-white/10 border border-white/20 rounded text-white text-center focus:outline-none focus:ring-1 focus:ring-green-500\"\n                            />\n                          </td>\n                          <td className=\"py-2 px-3\">\n                            <input\n                              type=\"number\"\n                              min=\"1\"\n                              value={formData.productsInventory[product.id]?.min_quantity || 10}\n                              onChange={(e) => updateProductInventory(product.id, 'min_quantity', e.target.value)}\n                              className=\"w-20 px-2 py-1 bg-white/10 border border-white/20 rounded text-white text-center focus:outline-none focus:ring-1 focus:ring-green-500\"\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex gap-3 pt-6 border-t border-white/10\">\n              <button\n                type=\"submit\"\n                disabled={formData.selectedRegions.length === 0 || formData.selectedManagers.length === 0}\n                className=\"flex-1 bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n              >\n                <span>💾</span>\n                إضافة المخزن\n              </button>\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"flex-1 bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors font-medium\"\n              >\n                إلغاء\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst AddWarehouseModal = ({ onClose, onSave, language }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    city: '',\n    region: '',\n    capacity: '',\n    manager: ''\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl max-w-md w-full border border-white/20\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-2xl font-bold\">إضافة مخزن جديد</h3>\n            <button onClick={onClose} className=\"text-white/70 hover:text-white text-2xl\">✕</button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">اسم المخزن</label>\n              <input\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المدينة</label>\n              <input\n                type=\"text\"\n                value={formData.city}\n                onChange={(e) => setFormData(prev => ({ ...prev, city: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المنطقة</label>\n              <input\n                type=\"text\"\n                value={formData.region}\n                onChange={(e) => setFormData(prev => ({ ...prev, region: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">السعة</label>\n              <input\n                type=\"number\"\n                value={formData.capacity}\n                onChange={(e) => setFormData(prev => ({ ...prev, capacity: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المدير</label>\n              <input\n                type=\"text\"\n                value={formData.manager}\n                onChange={(e) => setFormData(prev => ({ ...prev, manager: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div className=\"flex gap-3 pt-4\">\n              <button\n                type=\"submit\"\n                className=\"flex-1 bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors\"\n              >\n                إضافة المخزن\n              </button>\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"flex-1 bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors\"\n              >\n                إلغاء\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Edit Warehouse Modal\nconst EditWarehouseModal = ({ warehouse, onClose, onSave, language }) => {\n  const [formData, setFormData] = useState({\n    name: warehouse.name || '',\n    city: warehouse.city || '',\n    region: warehouse.region || '',\n    capacity: warehouse.capacity || '',\n    manager: warehouse.manager || ''\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave({ ...warehouse, ...formData });\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl max-w-md w-full border border-white/20\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-2xl font-bold\">تعديل المخزن</h3>\n            <button onClick={onClose} className=\"text-white/70 hover:text-white text-2xl\">✕</button>\n          </div>\n          \n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">اسم المخزن</label>\n              <input\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المدينة</label>\n              <input\n                type=\"text\"\n                value={formData.city}\n                onChange={(e) => setFormData(prev => ({ ...prev, city: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المنطقة</label>\n              <input\n                type=\"text\"\n                value={formData.region}\n                onChange={(e) => setFormData(prev => ({ ...prev, region: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">السعة</label>\n              <input\n                type=\"number\"\n                value={formData.capacity}\n                onChange={(e) => setFormData(prev => ({ ...prev, capacity: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-2\">المدير</label>\n              <input\n                type=\"text\"\n                value={formData.manager}\n                onChange={(e) => setFormData(prev => ({ ...prev, manager: e.target.value }))}\n                className=\"w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                required\n              />\n            </div>\n            \n            <div className=\"flex gap-3 pt-4\">\n              <button\n                type=\"submit\"\n                className=\"flex-1 bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                حفظ التغييرات\n              </button>\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"flex-1 bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors\"\n              >\n                إلغاء\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getWarehouseStatusColor = (status) => {\n  switch (status) {\n    case 'active': return 'bg-green-500/20 text-green-300 border-green-500/30';\n    case 'maintenance': return 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30';\n    case 'inactive': return 'bg-red-500/20 text-red-300 border-red-500/30';\n    default: return 'bg-gray-500/20 text-gray-300 border-gray-500/30';\n  }\n};\n\nexport default WarehouseManagement;"],"names":["EnhancedWarehouseDashboard","_ref2","stats","warehouses","products","loading","language","onAddWarehouse","onEditWarehouse","onViewDetails","getWarehouseStatusColor","_jsx","className","children","_jsxs","getStockStatusColor","status","totalWarehouses","totalProducts","activeWarehouses","totalManagers","totalRegionsCovered","onClick","map","warehouse","_warehouse$region_nam","_warehouse$manager_na","name","concat","city","region_names","region","index","manager_names","manager","product","inventory","products_inventory","id","getProductStockStatus","productId","quantity","min_quantity","category","unit","EnhancedInventoryManagement","_ref4","onRefresh","user","console","log","EnhancedEditWarehouseModal","_ref5","onClose","onSave","regions","availableManagers","formData","setFormData","useState","selectedRegions","selectedManagers","managers","productsInventory","onSubmit","e","preventDefault","_objectSpread","type","value","onChange","prev","target","required","checked","includes","handleRegionToggle","regionId","filter","cities","join","handleManagerToggle","managerId","full_name","role","WarehouseOrdersManagement","_ref7","orders","order","clinic","total","items","MovementsLog","_ref8","movements","movement","date","EnhancedAddWarehouseModal","_ref9","useEffect","initialInventory","forEach","max_quantity","updateProductInventory","field","parseInt","placeholder","length","department","_formData$productsInv","_formData$productsInv2","min","disabled","_ref","isRTL","activeTab","setActiveTab","setWarehouses","setProducts","setRegions","setAvailableManagers","pendingOrders","setPendingOrders","warehouseStats","setWarehouseStats","setMovements","setLoading","error","setError","success","setSuccess","showAddWarehouseModal","setShowAddWarehouseModal","showEditWarehouseModal","setShowEditWarehouseModal","selectedWarehouse","setSelectedWarehouse","t","useTranslation","egyptianRegions","availableProducts","fetchWarehouseData","fetchRegions","fetchAvailableManagers","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","created_at","label","icon","tab"],"sourceRoot":""}